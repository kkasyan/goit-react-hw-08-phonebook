{"version":3,"file":"static/js/95.c2eea9e9.chunk.js","mappings":"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","sources":["components/shared/BackButton/BackButton.jsx","pages/NotFound/NotFound.jsx","../node_modules/@chakra-ui/image/dist/chunk-QBIO4VEB.mjs","../node_modules/@chakra-ui/image/dist/chunk-HR33I6FK.mjs","../node_modules/@chakra-ui/image/dist/chunk-E77276RR.mjs"],"sourcesContent":["import { Button } from '@chakra-ui/react';\nimport { Link } from 'react-router-dom';\n\nexport const BackButton = () => {\n  return (\n    <Button p=\"30px\" m=\"10px\">\n      <Link to=\"/contacts\">Back to the contacts</Link>\n    </Button>\n  );\n};\n","import { Center, Text, Image } from '@chakra-ui/react';\nimport { BackButton } from 'components/shared/BackButton/BackButton';\n\nconst NotFound = () => {\n  return (\n    <Center p=\"15px\" flexDirection=\"column\">\n      <Text p=\"5px\">The page you are looking for is not found...</Text>\n      <BackButton />\n      <Image\n        src=\"https://i.pinimg.com/564x/03/61/dd/0361dd6bd4a279f4adee51f982bba2e0.jpg\"\n        alt=\"Not Found\"\n      />\n    </Center>\n  );\n};\n\nexport default NotFound;\n","// src/native-image.tsx\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\n  return /* @__PURE__ */ jsx(\"img\", { width: htmlWidth, height: htmlHeight, ref, alt, ...rest });\n});\nNativeImage.displayName = \"NativeImage\";\n\nexport {\n  NativeImage\n};\n","// src/use-image.ts\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src)\n      return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin)\n      img.crossOrigin = crossOrigin;\n    if (srcSet)\n      img.srcset = srcSet;\n    if (sizes)\n      img.sizes = sizes;\n    if (loading)\n      img.loading = loading;\n    img.onload = (event) => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n    img.onerror = (error) => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback)\n      return void 0;\n    if (status === \"loading\") {\n      load();\n    }\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\n\nexport {\n  useImage,\n  shouldShowFallbackImage\n};\n","import {\n  NativeImage\n} from \"./chunk-QBIO4VEB.mjs\";\nimport {\n  shouldShowFallbackImage,\n  useImage\n} from \"./chunk-HR33I6FK.mjs\";\n\n// src/image.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// ../../utilities/object-utils/src/index.ts\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key];\n    }\n  }\n  return clone;\n}\n\n// src/image.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar Image = forwardRef(function Image2(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({\n    ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\n  };\n  if (showFallbackImage) {\n    if (fallback)\n      return fallback;\n    return /* @__PURE__ */ jsx(\n      chakra.img,\n      {\n        as: NativeImage,\n        className: \"chakra-image__placeholder\",\n        src: fallbackSrc,\n        ...shared\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    chakra.img,\n    {\n      as: NativeImage,\n      src,\n      srcSet,\n      crossOrigin,\n      loading,\n      referrerPolicy,\n      className: \"chakra-image\",\n      ...shared\n    }\n  );\n});\nImage.displayName = \"Image\";\n\nexport {\n  Image\n};\n"],"names":["BackButton","p","m","to","flexDirection","src","alt","NativeImage","forwardRef","props","ref","htmlWidth","htmlHeight","rest","jsx","width","height","displayName","Image","fallbackSrc","fallback","srcSet","align","fit","loading","ignoreFallback","crossOrigin","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","useState","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","object","keysToOmit","clone","Object","assign","key","omit","chakra","as","className"],"sourceRoot":""}